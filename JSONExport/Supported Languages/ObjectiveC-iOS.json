{
  "langName": "ObjectiveC - iOS",
  "hasHeaderFile": true,
  "modelStart": "",
  "basicTypesWithSpecialFetchingNeedsReplacements": [
    "integerValue",
    "boolValue",
    "charValue",
    "floatValue",
    "doubleValue",
    "longValue"
  ],
  "basicTypesWithSpecialStoringNeeds": [
    "NSInteger",
    "BOOL",
    "char",
    "CGFloat",
    "double",
    "long"
  ],
  "importForEachCustomType": "",
  "reservedKeywords": [
    "abstract",
    "assert",
    "boolean",
    "break",
    "byte",
    "case",
    "catch",
    "char",
    "class",
    "const",
    "continue",
    "default",
    "do",
    "double",
    "else",
    "enum",
    "extends",
    "false",
    "final",
    "finally",
    "float",
    "for",
    "goto",
    "if",
    "implements",
    "import",
    "instanceof",
    "int",
    "interface",
    "long",
    "native",
    "new",
    "null",
    "package",
    "private",
    "protected",
    "public",
    "return",
    "short",
    "static",
    "strictfp",
    "super",
    "switch",
    "synchronized",
    "this",
    "throw",
    "throws",
    "transient",
    "true",
    "try",
    "void",
    "volatile",
    "while",
    "id",
    "class",
    "description"
  ],
  "briefDescription": "Defines how your JSON objects can be mapped to Objective-c classes using the built-in NSJSONSerialization class",
  "utilityMethods": [
    {
      "forEachProperty": "\tif (self.<!VarName!> != nil) {\n\t\tdictionary[<!ConstKeyName!>] = self.<!VarName!>;\n\t}\n",
      "bodyEnd": "\n}\n",
      "signature": "- (NSDictionary *)toDictionary",
      "forEachPropertyWithSpecialStoringNeeds": "\tdictionary[<!ConstKeyName!>] = @(self.<!VarName!>);\n",
      "forEachArrayOfCustomTypeProperty": "\tif (self.<!VarName!> != nil) {\n\t\tNSMutableArray *dictionaryElements = [NSMutableArray array];\n\t\tfor (<!ElementType!> *<!VarName!>Element in self.<!VarName!>) {\n\t\t\t[dictionaryElements addObject:[<!VarName!>Element toDictionary]];\n\t\t}\n\t\tdictionary[<!ConstKeyName!>] = dictionaryElements;\n\t}\n",
      "forEachCustomTypeProperty": "\tif (self.<!VarName!> != nil) {\n\t\tdictionary[<!ConstKeyName!>] = [self.<!VarName!> toDictionary];\n\t}\n",
      "returnStatement": "\treturn dictionary;",
      "body": "\tNSMutableDictionary *dictionary = [NSMutableDictionary dictionary];\n",
      "comment": "",
      "bodyStart": " {\n"
    },
    {
      "forEachProperty": "\t[aCoder encodeObject:self.<!VarName!> forKey:<!ConstKeyName!>];\n",
      "bodyEnd": "}\n\n",
      "signature": "- (void)encodeWithCoder:(NSCoder *)aCoder",
      "forEachPropertyWithSpecialStoringNeeds": "\t[aCoder encodeObject:@(self.<!VarName!>) forKey:<!ConstKeyName!>];",
      "forEachArrayOfCustomTypeProperty": "\t[aCoder encodeObject:self.<!VarName!> forKey:<!ConstKeyName!>];\n",
      "forEachCustomTypeProperty": "\t[aCoder encodeObject:self.<!VarName!> forKey:<!ConstKeyName!>];\n",
      "returnStatement": "",
      "body": "\t[super encodeWithCoder:coder];\n",
      "comment": "\n#pragma mark - NSCoding\n\n",
      "bodyStart": " {\n"
    },
    {
      "forEachProperty": "\t\tself.<!VarName!> = [aDecoder decodeObjectForKey:<!ConstKeyName!>];\n",
      "bodyEnd": "\n}\n",
      "signature": "- (instancetype)initWithCoder:(NSCoder *)aDecoder",
      "forEachPropertyWithSpecialStoringNeeds": "\t\tself.<!VarName!> = [[aDecoder decodeObjectForKey:<!ConstKeyName!>] <!VarBasicTypeReplacement!>];\n",
      "forEachArrayOfCustomTypeProperty": "\t\tself.<!VarName!> = [aDecoder decodeObjectForKey:<!ConstKeyName!>];\n",
      "forEachCustomTypeProperty": "\t\tself.<!VarName!> = [aDecoder decodeObjectForKey:<!ConstKeyName!>];\n",
      "returnStatement": "\t}\n\treturn self;",
      "body": "\tself = [super initWithCoder:aDecoder];\n\tif (self) {\n",
      "comment": "",
      "bodyStart": " {\n"
    },
    {
      "forEachProperty": "\tcopy.<!VarName!> = [self.<!VarName!> copy];\n",
      "bodyEnd": "\n}\n\n",
      "signature": "- (instancetype)copyWithZone:(NSZone *)zone",
      "forEachPropertyWithSpecialStoringNeeds": "\tcopy.<!VarName!> = self.<!VarName!>;\n",
      "forEachArrayOfCustomTypeProperty": "\tcopy.<!VarName!> = [self.<!VarName!> copy];\n",
      "forEachCustomTypeProperty": "\tcopy.<!VarName!> = [self.<!VarName!> copy];\n",
      "returnStatement": "\n\treturn copy;",
      "body": "\t<!ModelName!> *copy = [[[self class] allocWithZone:zone] init];\n\n",
      "comment": "\n#pragma mark - NSCopying\n\n",
      "bodyStart": " {\n"
    }
  ],
  "dataTypes": {
    "stringType": "NSString",
    "boolType": "BOOL",
    "floatType": "CGFloat",
    "doubleType": "double",
    "characterType": "char",
    "longType": "long",
    "intType": "NSInteger"
  },
  "wordsToRemoveToGetArrayElementsType": [
    "NSArray",
    "NSMutableArray"
  ],
  "constructors": [
    {
      "fetchBasicTypeWithSpecialNeedsPropertyFromMap": "\n\t\tself.<!VarName!> = [dictionary[<!ConstKeyName!>] <!VarBasicTypeReplacement!>];",
      "fetchCustomTypePropertyFromMap": "\n\t\tself.<!VarName!> = [[<!VarType!> alloc] initWithDictionary:dictionary[<!ConstKeyName!>]];",
      "bodyEnd": "\n\t}\n\treturn self;\n}\n",
      "fetchBasicTypePropertyFromMap": "\n\t\tself.<!VarName!> = dictionary[<!ConstKeyName!>];",
      "signature": "\n- (instancetype)initWithDictionary:(NSDictionary *)dictionary ",
      "fetchArrayOfCustomTypePropertyFromMap": "\n\tif (dictionary[<!ConstKeyName!>] != nil && [dictionary[<!ConstKeyName!>] isKindOfClass:[NSArray class]]) {\n\t\tNSArray * <!VarName!>Dictionaries = dictionary[<!ConstKeyName!>];\n\t\tNSMutableArray * <!VarName!>Items = [NSMutableArray array];\n\t\tfor (NSDictionary *<!VarName!>Dictionary in <!VarName!>Dictionaries) {\n\t\t\t<!ElementType!> * <!VarName!>Item = [[<!ElementType!> alloc] initWithDictionary:<!VarName!>Dictionary];\n\t\t\t[<!VarName!>Items addObject:<!VarName!>Item];\n\t\t}\n\t\tself.<!VarName!> = <!VarName!>Items;\n\t}",
      "comment": "",
      "bodyStart": "{\n\tself = [super init];\n\tif (self) {"
    }
  ],
  "constVarDefinition": "NSString *const <!ConstKeyName!> = @\"<!JsonKeyName!>\";\n",
  "modelDefinition": "\n@interface <!ModelName!> ()\n\n@end\n\n@implementation <!ModelName!>\n",
  "genericType": "NSObject",
  "headerFileData": {
    "modelDefinitionWithParent": "\n@interface <!ModelName!> : <!ParentClass!>\n",
    "modelEnd": "@end",
    "instanceVarDefinition": "@property (nonatomic, strong) <!VarType!> *<!VarName!>;\n",
    "utilityMethodSignatures": [
      "- (NSDictionary *)toDictionary;\n\n"
    ],
    "constructorSignatures": [
      "- (instancetype)initWithDictionary:(NSDictionary *)dictionary;\n"
    ],
    "typesNeedSpecialDefinition": [
      "NSInteger",
      "BOOL",
      "char",
      "CGFloat",
      "double",
      "long"
    ],
    "modelStart": "",
    "importParentHeaderFile": "#import \"<!ParentClass!>.h\"\n",
    "headerFileExtension": "h",
    "modelDefinition": "\n@interface <!ModelName!> : NSObject\n",
    "importForEachCustomType": "#import \"<!ModelName!>.h\"\n",
    "instanceVarWithSpeicalDefinition": "@property (nonatomic, assign) <!VarType!> <!VarName!>;\n",
    "staticImports": "#import <UIKit/UIKit.h>"
  },
  "fileExtension": "m",
  "arrayType": "NSArray",
  "basicTypesWithSpecialFetchingNeeds": [
    "NSInteger",
    "BOOL",
    "char",
    "CGFloat",
    "double",
    "long"
  ],
  "displayLangName": "ObjectiveC - iOS",
  "instanceVarDefinition": "",
  "supportsFirstLineStatement": "false",
  "modelEnd": "@end",
  "staticImports": "",
  "importHeaderFile": "#import \"<!ModelName!>.h\"\n"
}
